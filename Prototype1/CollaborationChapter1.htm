<HTML>
<head>
<script src="../javascripts/menuCommon.js"></script>
</head>

<link rel=STYLESHEET TYPE="text/css" href="../stylesheets/common.css">

<B class="HeadingText">Collaboration and feedback</B>
<br><br>

<em onClick="return clickreturnvalue()" onMouseover="dropdownmenu(this, event, helpMenu, '260px')" onMouseout="delayhidemenu()">Chapter 1 - Introduction</em>
<body>

<p>Virtually anyone that has read an article or blog on the internet has noticed that most support user feedback.  The feedback area is usually at the bottom of the web page and is done for a variety of reasons - most notably to encourage reader loyalty and promote web site viewership.  I'm going to suggest that the feedback mechanism can be drastically improved and perhaps even implemented in a consistent manner.  This would lead to a greater user experience, and could lead to increased productivity and innovation.  It is my opinion that collaboration contributes to better work products (e.g., better books, better designs, better methods and procedures).  And, it is the carefully managed content and centrally managed feedback which is at the heart of the opportunity for improvement.  In this article, I'm going to describe the business case, user experience, and requirements for the next generation of collaboration on the internet.   Many of the building blocks already exist, and there are a variety of companies that are already solving portions of the problem set.   I'm merely going to attempt to pull all of this together - my goal is to inspire a better internet, where users are doing more than just ranting about topics that don't ever go anywhere.  The internet can be a huge productivity tool, but I'm fearful that it has merely become a preoccupation which distracts from more worthwhile endeavors. I think we can do better, and I think we must do better.</p>

<p>The article is divided into the following sections:</p>
<ul>
  <li><a href="CollaborationChapter1.htm">Background</a>
  <li><a href="CollaborationChapter2.htm">High level requirements</a>
  <li><a href="CollaborationChapter3.htm">Real world case studies</a>
  <li><a href="CollaborationChapter4.htm">Detailed requirements</a>
</ul>

<p>A <a href="http://en.wikipedia.org/wiki/Web_annotation">web annotation</a> is a mechanism to offer feedback on any web page.  The technology to support this is modestly simple.  Typically the feedback for a given web page is stored externally (on some other server).  The feedback is tracked back to the original web page's <em title="Universal Resource Locator">URL</em>, and the individual comments are tied to particular sections of the original document.   For most annotation frameworks, users have to create an account with a given annotation company - some offer the service for free (at least for limited feature accounts).   The companies make money through advertising and premium subscriptions.</p>

<p><a href="http://www.openannotation.org/spec/core/">Open Annotations</a> specification attempts to document how feedback about specific sections of web content can be record in a consistent manner.  For text based content expressed in html, this isn't that difficult to do.  But for pictures, audio or video this is slightly more challenging.   So Open Annotations is an attempt to express a standard which allows tagging of any arbitrary bit of data exposed over the internet.  Now this is a rather complex spec so I wouldn't recommend most readers even bother looking at it.  I only call attention to this because many people throughout the world consider this subject to be rather important, and it is apparent that the world is already conspiring to solve the very problem I'm describing here (well, at least partly).   Again, I'm merely trying to connect the dots and raise awareness to an opportunity for efficiency and innovation.</p>

<p>E-Readers - thanks to tablets and smart phones, online books are becoming extremely popular.  Companies like Google, Amazon, Kindle and Barnes & Noble have been industry leaders in this area.  But sadly, the E-Reader user experience is several steps backward as compared to typical web page browsing.  There are a variety of reasons why this is the case and I'm certainly not trying to bash companies which ventured into the E-Reader business.   These companies were concerned about protecting their copyrighted material, had a huge supply of content which had to be converted to an electronic format (I'm sure that was no small expense), and the hardware and operating systems were in a state of flux.  But as online consumption of books matures, the companies which offer E-Readers will have no choice but to improve the user experience (and this will invariably need to be on par with the web browser experience users have grown accustomed to).</p>

<p>Social Networks - Virtually everyone is aware of Facebook, Linked-In, Instagram and Twitter.  These companies have done a good job of encouraging integration to their sites from a variety of places (like from web pages and even some E-Reader apps).  For example, many web pages today allow you to highlight a portion of text and then offer easy access to Facebook and Twitter.  This enables users to blog about what they are reading on the web without worrying about the original page's <em title="Universal Resource Locator">URL</em>.  Furthermore, the highlighted text from the source page is automatically copied making things quick and easy for the user.   Of course, as I mention above, this isn't really a complicated set of technology and even absent automated frameworks, users could accomplish pretty much the same thing via copy/paste of the original <em title="Universal Resource Locator">URL</em> and relevant text.   But of course, ease of use is the key, and when things are done automatically, user session information and a whole host of other information can be included behind the scenes (which incidentally, perhaps should be a privacy concern - but at present, doesn't seem to be).</p>

<p>Separating the content and the feedback - this is a good thing but does lead to one problem - namely, how can an author encourage feedback?  So far, I've merely described that feedback is managed and stored external to the original content.   This is necessary since the author (or publishing company) owns the original content.  After all, you can't have everyone in the world marking up the original work - it must be preserved as is.  So there really is no choice other than to store feedback externally.  Now in theory, people could copy the original work and mark it up separately, but there would be copyright issues.  Plus, that would lead to data redundancy, and thus wouldn't work well for collaboration across a wide audience.  So one problem I see is that an author doesn't really have a means to announce a feedback repository absent embedding links directly in the content.  Now it is true that authors can limit their content to web sites which have such links, but this places a severe burden on the author (i.e., they must tightly control the manner in which their content is consumed).  And this actually conflicts with the notion that a piece of content can be consumed anywhere, on any device, and across any client application.  Plus, to reach the widest audience possible, an author may want to expose their content across numerous web sites.  In fact, the author might allow anyone to host their content even absent explicit consent.  So once again, this means the author must be allowed to embed something directly within the given piece of content so as to allow centralization of feedback regardless of the site offering the content.</p>

<p>Limiting scope of feedback - since content offered over the internet can be consumed by everyone, and since there are collaborative frameworks which allow anyone to share their opinions publicly, there is no way to restrict anyone from commenting on any internet based content.   This is just a fact of life, and I'm certainly not going to express anything here to limit that (it wouldn't even make sense to try).  But I find it rather odd that an author has to invent their own framework to gather feedback since there isn't a means to consolidate feedback across the numerous platforms that currently exist.  And on top of this, there is no consistent way to manage discussion threads (e.g., no way to nominate reviewers or express reviewer roles,  no way to negotiate feedback or quarantine inappropriate feedback, etc.).  Now it is possible that one or more of the Social Networking companies will start to evolve such mechanisms - and to tell you the truth, that is actually what I would expect.  This is exactly why I'm attempting to document the requirements here.  I'd rather start with a set of abstract requirements which one or more social networking or IT companies implement, than merely have them implement the things which will help them make the most money.  I have no problem with them making money, but I'd at least like a modestly robust and effective user experience.  And more over, if we don't start with a set of abstract requirements, then we'll be stuck with a lot of disparate implementations with little or no interoperability.  This will cause users to be locked into a particular framework.  Now that might be good for the companies that implement frameworks, but it won't be ideal for the end consumer.</p>

<p>Portability - it took a long time for the notion of number portability to take hold in the communications industry, and I think it is long over due that we start considering the notion of portability when it comes to the data stored on the internet.  To demonstrate the importance of portability, just consider the huge amount of email that you've accumulated over the years.   Anyone that has ever changed their Internet Service Provider (ISP) knows what a pain it is to transfer email (and let's not forget about all the web accounts which reference that email address).  Now some people try to minimize this by getting email accounts which are external to their ISP - like gmail or yahoo.  But even this isn't a fool proof strategy because there is no guarantee that those companies will remain in business.   Of course, I'm not predicting the demise of Google or Yahoo, but change is inevitable, and it is always best to design systems which adapt to change.   Now it is true that companies like Google and Yahoo do implement mechanisms to help port email data (like uploading of contacts), and yes, Facebook also allows uploading of information too.   But my point is that at present I'm not aware of any published requirements which mandate this.  In fact, web companies typically spend much more time and effort evolving port-in strategies so that they can gain market share.   Port-out mechanisms are almost aways an after thought or are deliberately not available (so as to protect their sphere of control).</p>

<p>So when you put it all together, to manage feedback effectively, the following is needed:
<ol>
   <li>Service providers must evolve feedback mechanisms which are built upon a baselined set of requirements.
   <li>Authors must be able to embed something in their content to request feedback. 
   <li>Portability of feedback (and social networks) is needed so that consumers can be well served.  
</ol>

<p>One last point on portability - many might think I'm crazy because the obvious question is, "Why would companies that want to gain market share ever offer portability?"   Well my premise is that until portability exists, end users will never have any confidence in feedback mechanisms and will never fully trust or utilize such frameworks.  Sure, they might dabble with them, but until they are mature, and most importantly, until individuals and companies feel like they truly own the feedback/content, they will never be willing to pay anything meaningful for service providers which offer such mechanisms.   Companies today do in fact spend a decent amount of money on data management, and there is a whole host of services which they would be willing to pay for.  But again, companies must trust that the data is secure, is well managed, and can be reliably transfered to some other service provider if need be.   And as such frameworks become more trusted, robust and consistent, even individual consumers (like authors, or educators) will utilize them.   I think there is money to be made in this area, but disparate frameworks funded primarily by advertising probably won't get the job done.</p>

<p>Polls/Surveys - most people think of user feedback as being text based responses in discussion threads.  But another critical aspect of feedback is user assessments.  Now there are already internet companies that <a href="http://polldaddy.com/" title="Polldaddy is an example of a company which supports user defined online surveys.">operate in this space</a>.  So again, I'm just trying to connect the dots and figure out a way to express the inter-related requirements.  I really just want Americans to have a consistent user experience and have access to these valuable tools across a diverse set of platforms and applications.   So for starters, polls/surveys are only valuable if you can ensure that there is some degree of user identity integrity.   The reason identity integrity is important is because you don't want a vocal minority skewing the survey results for some financial or political agenda.  Secondly, it would be valuable to be able to mine meta data surrounding the users (or groups) who responded to the surveys (this is where analytics come into play).   And lastly, assessments are most valuable when they can be customized based on their context (e.g., five star rating is fine for some things, but it doesn't really offer that much insight as to the justification for the rating).   So I think there is a huge need for a better and more consistent assessment model, and this needs to be built on established standards.  After all, we all know 4 out of 5 dentists recommend Trident for patients that chew gum - but what was the 5th dentist thinking and why didn't he recommend Trident?  Perhaps if I get my wish, we'll know the anser to that rather perplexing question.</p>
</pre>		 

<em onClick="return clickreturnvalue()" onMouseover="dropdownmenu(this, event, helpMenu, '260px')" onMouseout="delayhidemenu()">Chapter 1 - Introduction</em>&nbsp;&nbsp;&nbsp;&nbsp;
<a href="CollaborationChapter2.htm">Next Chapter</a>
&nbsp;&nbsp;&nbsp;&nbsp;
<a href="mailto:mrdarrellmadison@gmail.com?Subject=Collaboration%20Chapter_1" target="_top">Contact Darrell Madison</a>  

</html>